TITLE SUM AN ARRAY OF INTERGERS (P3-Q4.ASM)
;(1) DECLARE A LIST OF INTERGERS
;(2) ADD THEM UP
;(3) DISPLAY THE SUM

.MODEL SMALL
.STACK
.DATA

	BYTELIST	DB	2, 4, 6, 8, 10, 12
	SUM		DB	?
	sSUM		DB	"SUM: $"

.CODE
MAIN PROC

	MOV AX, @DATA
	MOV DS, AX

	;----CODE STARTS HERE
	MOV AL, 0		;AL = RESET MY REGISTER
	MOV CX, 6
	LEA BX, BYTELIST	;MOV BX, 0 ---->bytelist[bx]

	CONTINUE:
		ADD AL, [BX]	;LIST VALUE ADDED TO AL
		INC BX		;INC OFFSET TO LOOP THROUGH THE LIST	
		LOOP CONTINUE	;CX = CX -1 UNTIL 0

	;----UPDATE DATABASE
		MOV SUM, AL	; SUM = AL = NUM (NOT ASCII)

	;----DISPLAY WORD SUM
		MOV AH, 09H
		LEA DX, sUM
		INT 21H
	
	;----SPLITTING
	MOV AH, 0	;RESET MY AH = 0
	MOV DL, 10	;DL = 10 (DECIMAL 2 DIGIT)
	DIV DL		; AX = AL/10 = 42/10 = 4(Q=A1=1)..2(R=AH=\2ND)
		
	;----1ST = AL = 4	AH = 2ND = R =2
	;----STORE 1ST & 2ND DIGIT IN ANOTHER REG AS BUFFER
		MOV CH, AH	;CH = 2ND DIGIT (NOT ASCII)
		MOV CL, AL	;CL = 1ST DIGIT (NOT ASCII)

	;----DISPLAY 1ST DIGIT & 2ND DIGIT
	MOV AH, 02H
	MOV DL, CL		;DISPLAY 1ST DIGIT
		ADD DL, 30H	;CONVERT BEFORE DISPLAY
	INT 21H

	MOV AH, 02H
	MOV DL, CL		;DISPLAY 1ST DIGIT
		ADD DL, 30H	;CONVERT BEFORE DISPLAY
	INT 21H

	;---TERMINATE
	MOV AH, 4CH
	INT 21H

MAIN ENDP
END MAIN